<?xml version="1.0"?>
<!-- A Sample PMD configuration file that turns on a set of rules -->
<!-- but has no special configuration of the rules. -->
<ruleset name="Custom ruleset"
  xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
  <description>
    PMD Basic Configuration
  </description>

  <rule ref="category/java/bestpractices.xml" />
  <rule ref="category/java/bestpractices.xml/GuardLogStatement">
    <properties>
      <property name="logLevels" value="trace , debug , info , warn , error , log , finest , finer , fine , info , warning , severe" />
      <property name="guardsMethods" value="isTraceEnabled" />
    </properties>
  </rule>
  <rule ref="category/java/bestpractices.xml/UnitTestContainsTooManyAsserts">
    <properties>
      <property name="maximumAsserts" value="20" />
      <property name="extraAssertMethodNames" value="" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml">
    <exclude name="OnlyOneReturn" />
    <exclude name="AtLeastOneConstructor" />
  </rule>
  <rule ref="category/java/codestyle.xml/ShortVariable">
    <properties>
      <property name="minimum" value="2" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/LongVariable">
    <properties>
      <property name="minimum" value="40" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/FieldNamingConventions">
    <properties>
      <property name="publicConstantPattern" value="[A-Z][A-Z_0-9]*" />
      <property name="constantPattern" value="[A-Z][A-Z_0-9]*" />
      <property name="enumConstantPattern" value="[A-Z][A-Z_0-9]*" />
      <property name="finalFieldPattern" value="[a-z][a-zA-Z0-9]*" />
      <property name="staticFieldPattern" value="[a-z][a-zA-Z0-9]*" />
      <property name="defaultFieldPattern" value="[a-z][a-zA-Z0-9]*" />
      <property name="exclusions" value="serialVersionUID,serialPersistentFields,logger" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/MethodNamingConventions" >
    <properties>
      <!-- I like have underscores in my test names. This allows for that. -->
      <property name="junit4TestPattern" value="[a-z][a-zA-Z0-9_]*" />
    </properties>
  </rule>
  <rule ref="category/java/design.xml">
    <!-- As much as I theoretically like the Law of Demeter, the test for it hasn't kept up -->
    <!-- with how a lot of coding is done. It can't handle stream processing. -->
    <exclude name="LawOfDemeter" />
    <!-- This rule has to be configured explicitly. There are no defaults. Since there is nothing -->
    <!-- I want to put in here, I excluded it to remove a warning during build. See -->
    <!-- https://pmd.github.io/latest/pmd_rules_java_design.html#loosepackagecoupling for how to configure -->
    <!-- this rule if you want to use 0it. -->
    <exclude name="LoosePackageCoupling" />
  </rule>
  <rule ref="category/java/design.xml/ExcessiveImports">
    <properties>
      <property name="minimum" value="60" />
    </properties>
  </rule>
  <rule ref="category/java/documentation.xml">
    <exclude name="CommentRequired" />
  </rule>
  <rule ref="category/java/documentation.xml/CommentSize">
    <properties>
      <!-- 6 lines is too restrictive for comment length as it includes the Javadoc comments. -->
      <property name="maxLines" value="30" />
      <!-- I want the line size to match the code requirement. -->
      <property name="maxLineLength" value="150" />
    </properties>
  </rule>
  <rule ref="category/java/multithreading.xml"/>
  <rule ref="category/java/performance.xml"/>
  <rule ref="category/java/security.xml"/>
  <rule ref="category/java/errorprone.xml" />
</ruleset>